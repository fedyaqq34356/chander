import random
import string
from datetime import datetime, timedelta
from config import EXCHANGE_RATES, SPECIAL_RATES
from crypto_api import CryptoAPI
from config import CRYPTO_API_KEY

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
crypto_api = CryptoAPI(CRYPTO_API_KEY)

def generate_order_id():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ID –∑–∞—è–≤–∫–∏"""
    return f"N{random.randint(10000000, 99999999)}"

def generate_secret():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥"""
    letters = string.ascii_lowercase + string.digits
    return ''.join(random.choice(letters) for i in range(12))

async def update_rates():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ API"""
    try:
        new_rates = await crypto_api.get_crypto_rates()
        if new_rates:
            # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã
            EXCHANGE_RATES.update(new_rates)
            return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤: {e}")
    return False

async def calculate_exchange_amount(sell_currency, buy_currency, amount):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –æ–±–º–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º –∫—É—Ä—Å–∞"""
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã
    await update_rates()
    
    sell_rate = EXCHANGE_RATES.get(sell_currency, 1.0)
    buy_rate = EXCHANGE_RATES.get(buy_currency, 1.0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã
    pair_key = f"{sell_currency}-{buy_currency}"
    if pair_key in SPECIAL_RATES:
        special_rate = SPECIAL_RATES[pair_key]
        base_amount = (amount * sell_rate) / buy_rate
        return base_amount * (1 + special_rate)
    
    return (amount * sell_rate) / buy_rate

def get_expiry_time():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ (30 –º–∏–Ω—É—Ç)"""
    expiry = datetime.utcnow() + timedelta(minutes=30)
    return expiry.strftime("%H:%M UTC")

def format_order_message(sell_currency, sell_amount, buy_currency, buy_amount, order_id, secret, is_demo=False):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ"""
    expiry_time = get_expiry_time()
    
    demo_warning = ""
    if is_demo:
        demo_warning = "üé≠ –î–ï–ú–û –ó–ê–Ø–í–ö–ê\n"
    
    return f"""{demo_warning}‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
–í–∞—à–∞ –∑–∞—è–≤–∫–∞ #{order_id} –ø—Ä–∏–Ω—è—Ç–∞!
Secret: `{secret}`
–ü—Ä–æ–¥–∞–µ—Ç–µ: {sell_amount} {sell_currency}
–ü–æ–∫—É–ø–∞–µ—Ç–µ: {buy_amount:.4f} {buy_currency}
–û—Ä–¥–µ—Ä –∞–∫—Ç—É–∞–ª–µ–Ω –¥–æ {expiry_time}
–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É, –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û! –ó–∞–ø—Ä–æ—Å–∏—Ç–µ secret –∫–æ–¥ –¥–ª—è –í–∞—à–µ–π –∑–∞—è–≤–∫–∏ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –î–û –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ª—é–±—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.{' (–î–ï–ú–û)' if is_demo else ''}"""

def format_admin_message(username, user_id, sell_currency, sell_amount, buy_currency, buy_amount, order_id, secret, is_demo=False):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –≥—Ä—É–ø–ø—ã"""
    expiry_time = get_expiry_time()
    
    demo_prefix = "üé≠ –î–ï–ú–û " if is_demo else ""
    
    return f"""{demo_prefix}–ó–∞—è–≤–∫–∞ #{order_id}

Secret: `{secret}`
–ü—Ä–æ–¥–∞–∂–∞: {sell_amount} {sell_currency}
–ü–æ–∫—É–ø–∫–∞: {buy_amount:.8f} {buy_currency}

–ö—É—Ä—Å –∞–∫—Ç—É–∞–ª–µ–Ω –¥–æ {expiry_time}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username} (ID: {user_id}){' [–î–ï–ú–û –†–ï–ñ–ò–ú]' if is_demo else ''}"""
# –î–æ–±–∞–≤–∏—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ utils.py

def get_new_order_message():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏"""
    return """–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –°–æ–≤–µ—Ä—à–∏—Ç—å –æ–±–º–µ–Ω
–ù–∞–∂–∏–º–∞—è –°–æ–≤–µ—Ä—à–∏—Ç—å –æ–±–º–µ–Ω, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å —Ä–∞–∑–¥–µ–ª–æ–º /terms"""
